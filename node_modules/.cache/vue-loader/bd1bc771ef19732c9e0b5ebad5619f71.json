{"remainingRequest":"/Users/iantairea/Desktop/Projects/tt-mobile/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/iantairea/Desktop/Projects/tt-mobile/src/components/FitnessPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/iantairea/Desktop/Projects/tt-mobile/src/components/FitnessPage.vue","mtime":1586934769005},{"path":"/Users/iantairea/Desktop/Projects/tt-mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iantairea/Desktop/Projects/tt-mobile/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iantairea/Desktop/Projects/tt-mobile/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/iantairea/Desktop/Projects/tt-mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iantairea/Desktop/Projects/tt-mobile/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from \"vue\";\nimport Chart from \"chart.js\";\nimport \"chartjs-plugin-labels\";\nimport { db } from \"./firebaseInit\";\nimport { firestorePlugin } from \"vuefire\";\nVue.use(firestorePlugin);\n\nimport IndividualComment from \"./IndividualComment.vue\";\n\nexport default {\n  name: \"FitnessPage\",\n  components: {\n    IndividualComment\n  },\n  props: [\"student\", \"overview\", \"a4\"],\n  data() {\n    return {\n      standards: [],\n      standardStatus: [],\n      reportComments: [],\n      fitnessData: [],\n      run4k: [],\n      yoyo: [],\n      pressup: [],\n      situp: [],\n      pullup: [],\n      runChart: null,\n      strengthChart: null,\n      chartCount: null,\n      studentName: null\n    };\n  },\n  firestore: {\n    // fitnessData: db.collection(`/students/${this.student.id}/fitnessData/2019`)\n  },\n  mounted() {\n    // get fitness data from firebase\n    this.$bind(\n      \"fitnessData\",\n      db.collection(`/students/${this.student.id}/fitnessData`)\n    );\n     this.$bind(\n      \"reportComments\",\n      db.collection(`/students/${this.student.id}/reportComments`)\n    )\n\n    this.studentName = this.student.given_name;\n  },\n  watch: {\n    fitnessData: {\n      handler: \"loadChart\"\n    }\n  },\n  computed: {},\n  methods: {\n    fitnessComment(report) {\n      //get the fitness & conditioning comment only\n      if (report.subject == \"Fitness & Conditioning\") {\n        return report\n      }\n    },\n    getFitnessData(activity) {\n      //get fitness data\n      let fitnessStuff = this.fitnessData.filter(\n        fit => fit.nsn == this.student.id\n      );\n\n      if (!fitnessStuff) {\n        fitnessStuff = \"No fitness data\";\n      }\n      switch (activity) {\n        case \"run4k\":{\n          const run4kTimes = fitnessStuff[0].run4k;\n          //get index of training absenses\n          const run4kempties = run4kTimes.flatMap((runs, i) => runs === '' ? i : []);\n          //remove times and dates student wasnt there.\n          const filteredrun4k = run4kTimes.filter((d, i) => run4kempties.indexOf(i) == -1)\n          return filteredrun4k;\n        }\n        case \"yoyo\":{\n          const yoyoTimes = fitnessStuff[0].yoyo;\n          const yoyoempties = yoyoTimes.flatMap((yoyo, i) => yoyo === '' ? i : []);\n          const filteredyoyo = yoyoTimes.filter((d, i) => yoyoempties.indexOf(i) == -1)\n          return filteredyoyo;\n        }\n        case \"pressups\":{\n          const pressupsTimes = fitnessStuff[0].pressups\n          const pressupsempties = pressupsTimes.flatMap((pressup, i) => pressup === '' ? i : []);\n          const filteredpressups = pressupsTimes.filter((d, i) => pressupsempties.indexOf(i) == -1)\n          return filteredpressups;\n        }\n        case \"situps\":{\n          const situpsTimes = fitnessStuff[0].situps\n          const situpsempties = situpsTimes.flatMap((situp, i) => situp === '' ? i : []);\n          const filteredsitups = situpsTimes.filter((d, i) => situpsempties.indexOf(i) == -1)\n          return filteredsitups;\n        }\n        case \"burpees\":{\n          const burpeesTimes = fitnessStuff[0].burpees\n          const burpeesempties = burpeesTimes.flatMap((burpee, i) => burpee === '' ? i : []);\n          const filteredburpees = burpeesTimes.filter((d, i) => burpeesempties.indexOf(i) == -1)\n          return filteredburpees;\n        }\n      case \"airsquats\":{\n        const airsquatsTimes = fitnessStuff[0].airsquats\n        const airsquatsempties = airsquatsTimes.flatMap((airsquat, i) => airsquat === '' ? i : []);\n        const filteredairsquats = airsquatsTimes.filter((d, i) => airsquatsempties.indexOf(i) == -1)\n        return filteredairsquats;\n      }\n        default:\n      }\n    },\n    getLengthArray(activity) {\n      //get fitness data\n      let fitnessStuff = this.fitnessData.filter(\n        fit => fit.nsn == this.student.id\n      );\n      if (!fitnessStuff) {\n        fitnessStuff = \"No fitness data\";\n      }\n      switch (activity) {\n        case \"run4k\":{\n          const run4kTimes = fitnessStuff[0].run4k;\n          const run4kDates = fitnessStuff[0].run4kDates;\n          //get index of training absenses\n          const run4kempties = run4kTimes.flatMap((runs, i) => runs === '' ? i : []);\n          //remove dates student wasnt there.\n          const filteredrun4kDates = run4kDates.filter((d, i) => run4kempties.indexOf(i) == -1)\n          return filteredrun4kDates;\n        }\n        case \"yoyo\":{\n          const yoyoTimes = fitnessStuff[0].yoyo;\n          const yoyoDates = fitnessStuff[0].yoyoDates;\n          const yoyoempties = yoyoTimes.flatMap((yoyo, i) => yoyo === '' ? i : []);\n          const filteredyoyoDates = yoyoDates.filter((d, i) => yoyoempties.indexOf(i) == -1)\n          return filteredyoyoDates;\n        }\n        case \"pressups\":{\n          const pressupsTimes = fitnessStuff[0].pressups;\n          const pressupsDates = fitnessStuff[0].strengthDates;\n          const pressupsempties = pressupsTimes.flatMap((preesup, i) => preesup === '' ? i : []);\n          const filteredpressupsDates = pressupsDates.filter((d, i) => pressupsempties.indexOf(i) == -1)\n          return filteredpressupsDates;\n        }\n        case \"situps\": {\n          const situpsTimes = fitnessStuff[0].situps;\n          const situpsDates = fitnessStuff[0].strengthDates;\n          const situpsempties = situpsTimes.flatMap((situp, i) => situp === '' ? i : []);\n          const filteredsitupsDates = situpsDates.filter((d, i) => situpsempties.indexOf(i) == -1)\n          return filteredsitupsDates;\n        }\n        case \"airsquats\": {\n          const airsquatsTimes = fitnessStuff[0].airsquats;\n          const airsquatsDates = fitnessStuff[0].strengthDates;\n          const airsquatsempties = airsquatsTimes.flatMap((airsquat, i) => airsquat === '' ? i : []);\n          const filteredairsquatsDates = airsquatsDates.filter((d, i) => airsquatsempties.indexOf(i) == -1)\n          return filteredairsquatsDates;\n        }\n        case \"burpees\": {\n          const burpeesTimes = fitnessStuff[0].burpees;\n          const burpeesDates = fitnessStuff[0].strengthDates;\n          const burpeesempties = burpeesTimes.flatMap((burpee, i) => burpee === '' ? i : []);\n          const filteredburpeesDates = burpeesDates.filter((d, i) =>  burpeesempties.indexOf(i) == -1)\n          return filteredburpeesDates;\n        }\n        default:\n      }\n    },\n    loadChart() {\n\n      var run = document.getElementById(this.studentName + \"RunChart\");\n      var yoyo = document.getElementById(this.studentName + \"YoyoChart\");\n      var situps = document.getElementById(this.studentName + \"SitupsChart\");\n      var burpees = document.getElementById(this.studentName + \"BurpeesChart\");\n      var airsquats = document.getElementById(this.studentName + \"AirsquatsChart\");\n      var pressups = document.getElementById(this.studentName + \"PressupsChart\");\n\n      //=========== 4KM RUN CHART ===========\n      this.runChart = new Chart(run, {\n        type: \"line\",\n        data: {\n          datasets: [\n            {\n              data: this.getFitnessData(\"run4k\"),\n              label: \"4km Time\",\n              backgroundColor: \"#209cee\",\n              borderColor: \"#209cee\",\n              fill: false,\n              //datalabels: ,\n            },\n          ],\n          labels: this.getLengthArray(\"run4k\")\n        },\n        options: {\n          responsive: true,\n          title: {\n            display: true,\n            text: \"4K Run\"\n          },\n          tooltips: {\n            mode: \"index\",\n            intersect: false\n          },\n          hover: {\n            mode: \"nearest\",\n            intersect: true\n          },\n          scales: {\n            xAxes: [\n              {\n                // type: 'time',\n                // time: {\n                //     unit: 'month'\n                // },\n                display: true,\n                scaleLabel: {\n                  display: false,\n                  labelString: \"Month\"\n                },\n              }\n            ],\n            yAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Minutes\"\n                },\n                ticks: {\n                  reverse: true\n                }\n              }\n            ]\n          },\n          legend: {\n            display: true,\n            position: \"bottom\",\n            labels: {\n              boxWidth: 10,\n              fontSize: 10\n            }\n          }\n        },\n        plugins: {\n          labels: {\n            render: \"value\",\n            fontColor: \"#000\",\n            position: \"border\"\n            // outsidePadding: 4\n          }\n        }\n      });\n\n      //=========== YOYO CHART ===========\n      this.runChart = new Chart(yoyo, {\n        type: \"line\",\n        data: {\n          datasets: [\n            {\n              data: this.getFitnessData(\"yoyo\"),\n              label: \"Yoyo level\",\n              backgroundColor: \"#23d160\",\n              borderColor: \"#23d160\",\n              fill: false,\n              spanGaps: false\n            }\n          ],\n          labels: this.getLengthArray(\"yoyo\")\n        },\n        options: {\n          responsive: true,\n          title: {\n            display: true,\n            text: \"Yoyo\"\n          },\n          tooltips: {\n            mode: \"index\",\n            intersect: false\n          },\n          hover: {\n            mode: \"nearest\",\n            intersect: true\n          },\n          scales: {\n            xAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: false,\n                  labelString: \"Yoyo Level\"\n                }\n              }\n            ],\n            yAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Level\"\n                },\n                ticks: {\n                  // beginAtZero: true\n                }\n              }\n            ]\n          },\n          legend: {\n            display: true,\n            position: \"bottom\",\n            labels: {\n              boxWidth: 10,\n              fontSize: 9\n            }\n          }\n        }\n      });\n\n      //=========== SITUPS STRENGTH CHART ===========\n      this.strengthChart = new Chart(situps, {\n        type: \"line\",\n        data: {\n          datasets: [\n            {\n              data: this.getFitnessData(\"situps\"),\n              label: \"Sit ups\",\n              backgroundColor: \"#6457A6\",\n              borderColor: \"#6457A6\",\n              fill: false,\n              spanGaps: false\n            }\n          ],\n          labels: this.getLengthArray(\"situps\")\n        },\n        options: {\n          responsive: true,\n          title: {\n            display: true,\n            text: \"Situps\"\n          },\n          tooltips: {\n            mode: \"index\",\n            intersect: false\n          },\n          hover: {\n            mode: \"nearest\",\n            intersect: true\n          },\n          scales: {\n            xAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Term\"\n                }\n              }\n            ],\n            yAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Reps\"\n                }\n              }\n            ]\n          },\n          legend: {\n            display: true,\n            position: \"bottom\",\n            labels: {\n              boxWidth: 10,\n              fontSize: 9,\n              textAlign: \"center\"\n            }\n          }\n        }\n      });\n\n      //=========== PRESSUPS STRENGTH CHART ===========\n      this.strengthChart = new Chart(pressups, {\n        type: \"line\",\n        data: {\n          datasets: [\n            {\n              data: this.getFitnessData(\"pressups\"),\n              label: \"Press ups\",\n              backgroundColor: \"#ff8246\",\n              borderColor: \"#ff8246\",\n              fill: false,\n              spanGaps: false\n            }\n          ],\n          labels: this.getLengthArray(\"pressups\")\n        },\n        options: {\n          responsive: true,\n          title: {\n            display: true,\n            text: \"Pressups\"\n          },\n          tooltips: {\n            mode: \"index\",\n            intersect: false\n          },\n          hover: {\n            mode: \"nearest\",\n            intersect: true\n          },\n          scales: {\n            xAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Term\"\n                }\n              }\n            ],\n            yAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: false,\n                  labelString: \"Reps\"\n                }\n              }\n            ]\n          },\n          legend: {\n            display: true,\n            position: \"bottom\",\n            labels: {\n              boxWidth: 10,\n              fontSize: 9,\n              textAlign: \"center\"\n            }\n          }\n        }\n      });\n\n      //=========== BURPEES STRENGTH CHART ===========\n      this.strengthChart = new Chart(burpees, {\n        type: \"line\",\n        data: {\n          datasets: [\n            {\n              data: this.getFitnessData(\"burpees\"),\n              label: \"Burpees\",\n              backgroundColor: \"#628395\",\n              borderColor: \"#628395\",\n              fill: false,\n              spanGaps: false\n            }\n          ],\n          labels: this.getLengthArray(\"burpees\")\n        },\n        options: {\n          responsive: true,\n          title: {\n            display: true,\n            text: \"Burpees\"\n          },\n          tooltips: {\n            mode: \"index\",\n            intersect: false\n          },\n          hover: {\n            mode: \"nearest\",\n            intersect: true\n          },\n          scales: {\n            xAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Term\"\n                }\n              }\n            ],\n            yAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: false,\n                  labelString: \"Reps\"\n                }\n              }\n            ]\n          },\n          legend: {\n            display: true,\n            position: \"bottom\",\n            labels: {\n              boxWidth: 10,\n              fontSize: 9,\n              textAlign: \"center\"\n            }\n          }\n        }\n      });\n\n      //=========== AIRSQUATS STRENGTH CHART ===========\n      this.strengthChart = new Chart(airsquats, {\n        type: \"line\",\n        data: {\n          datasets: [\n            {\n              data: this.getFitnessData(\"airsquats\"),\n              label: \"Air Squats\",\n              backgroundColor: \"#EF306D\",\n              borderColor: \"#EF306D\",\n              fill: false,\n              spanGaps: false\n            }\n          ],\n          labels: this.getLengthArray(\"airsquats\")\n        },\n        options: {\n          responsive: true,\n          title: {\n            display: true,\n            text: \"Airsquats\"\n          },\n          tooltips: {\n            mode: \"index\",\n            intersect: false\n          },\n          hover: {\n            mode: \"nearest\",\n            intersect: true\n          },\n          scales: {\n            xAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Term\"\n                }\n              }\n            ],\n            yAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: false,\n                  labelString: \"Reps\"\n                }\n              }\n            ]\n          },\n          legend: {\n            display: true,\n            position: \"bottom\",\n            labels: {\n              boxWidth: 10,\n              fontSize: 9,\n              textAlign: \"center\"\n            }\n          }\n        }\n      });\n\n\n    }\n  }\n};\n",{"version":3,"sources":["FitnessPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"FitnessPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n\n    <h2 class=\"title is-6 has-text-centered\" v-if=\"!overview\">KAITIAKI COMMENTS</h2>\n    <!-- <div class=\"columns is-mobile\"> -->\n\n    <!-- FITNESS & CONDITIONING COMMENT -->\n    <IndividualComment  :student=\"student\" :reportComments=\"reportComments.filter(fitnessComment)\" :fitness=\"true\" />\n    <!-- <IndividualComment  :student=\"student\" :reportComments=\"fitnessComment\" :fitness=\"true\" /> -->\n\n    <div v-if=\"a4\" class=\"chartsContainerColumn\">\n      <!-- Pie Chart.js -->\n      <div class=\"chartFull\">\n        <img class=\"fitnessIcon\" v-bind:src=\"require('@/assets/running.png')\" />\n        <canvas\n          v-bind:id=\"studentName+'RunChart'\"\n          style=\"position: relative; height: 250px; width:100%\"\n        ></canvas>\n      </div>\n      <div class=\"chartFull\">\n        <img class=\"fitnessIcon\" v-bind:src=\"require('@/assets/yoyo.png')\" />\n        <!-- <canvas v-bind:id=\"studentName+'YoyoChart'\" style=\"height: 250px; width: 230px;\"></canvas> -->\n        <canvas\n          v-bind:id=\"studentName+'YoyoChart'\"\n          style=\"position: relative; height: 250px; width:100%\"\n        ></canvas>\n      </div>\n      \n    </div>\n\n    <div v-if=\"a4\" class=\"chartsContainerRow\">\n    <div class=\"chartQuarter\">\n        <img class=\"fitnessIcon\" v-bind:src=\"require('@/assets/situps.png')\" />\n        <canvas\n          v-bind:id=\"studentName+'SitupsChart'\"\n          style=\"position: relative; height: 250px; width:100%\"\n        ></canvas>\n      </div>\n      <div class=\"chartQuarter\">\n        <img class=\"fitnessIcon\" v-bind:src=\"require('@/assets/pushup.png')\" />\n        <canvas\n          v-bind:id=\"studentName+'PressupsChart'\"\n          style=\"position: relative; height: 250px; width:100%\"\n        ></canvas>\n      </div>\n    <div class=\"chartQuarter\">\n        <img class=\"fitnessIcon\" v-bind:src=\"require('@/assets/burpee.png')\" />\n        <canvas\n          v-bind:id=\"studentName+'BurpeesChart'\"\n          style=\"position: relative; height: 250px; width:100%\"\n        ></canvas>\n      </div>\n    <div class=\"chartQuarter\">\n        <img class=\"fitnessIcon\" v-bind:src=\"require('@/assets/squat.png')\" />\n        <canvas\n          v-bind:id=\"studentName+'AirsquatsChart'\"\n          style=\"position: relative; height: 250px; width:100%\"\n        ></canvas>\n      </div>\n      \n    </div>\n\n\n    <!-- not A4 -->\n    <div v-if=\"!a4\" class=\"chartsContainerFlex\">\n      <!-- Pie Chart.js -->\n      <div class=\"chartLeftFlex\">\n        <img class=\"fitnessIcon\" v-bind:src=\"require('@/assets/running.png')\" />\n        <canvas\n          v-bind:id=\"studentName+'RunChart'\"\n          style=\"position: relative; height: 250px; width:250px\"\n        ></canvas>\n      </div>\n      <div class=\"chartCenterFlex\">\n        <img class=\"fitnessIcon\" v-bind:src=\"require('@/assets/yoyo.png')\" />\n        <!-- <canvas v-bind:id=\"studentName+'YoyoChart'\" style=\"height: 250px; width: 230px;\"></canvas> -->\n        <canvas\n          v-bind:id=\"studentName+'YoyoChart'\"\n          style=\"position: relative; height: 250px; width:250px\"\n        ></canvas>\n      </div>\n      <div class=\"chartRightFlex\">\n        <img class=\"fitnessIcon\" v-bind:src=\"require('@/assets/pullups.png')\" />\n        <canvas\n          v-bind:id=\"studentName+'StrengthChart'\"\n          style=\"position: relative; height: 250px; width:250px\"\n        ></canvas>\n      </div>\n    </div>\n\n    <div class=\"columns\" id=\"accordion\">\n      <!-- Subject accordian here -->\n      <!-- <SubjectAccordion :student=\"student\"/> -->\n    </div>\n    <!-- </div> -->\n  </div>\n</template>\n\n<script>\nimport Vue from \"vue\";\nimport Chart from \"chart.js\";\nimport \"chartjs-plugin-labels\";\nimport { db } from \"./firebaseInit\";\nimport { firestorePlugin } from \"vuefire\";\nVue.use(firestorePlugin);\n\nimport IndividualComment from \"./IndividualComment.vue\";\n\nexport default {\n  name: \"FitnessPage\",\n  components: {\n    IndividualComment\n  },\n  props: [\"student\", \"overview\", \"a4\"],\n  data() {\n    return {\n      standards: [],\n      standardStatus: [],\n      reportComments: [],\n      fitnessData: [],\n      run4k: [],\n      yoyo: [],\n      pressup: [],\n      situp: [],\n      pullup: [],\n      runChart: null,\n      strengthChart: null,\n      chartCount: null,\n      studentName: null\n    };\n  },\n  firestore: {\n    // fitnessData: db.collection(`/students/${this.student.id}/fitnessData/2019`)\n  },\n  mounted() {\n    // get fitness data from firebase\n    this.$bind(\n      \"fitnessData\",\n      db.collection(`/students/${this.student.id}/fitnessData`)\n    );\n     this.$bind(\n      \"reportComments\",\n      db.collection(`/students/${this.student.id}/reportComments`)\n    )\n\n    this.studentName = this.student.given_name;\n  },\n  watch: {\n    fitnessData: {\n      handler: \"loadChart\"\n    }\n  },\n  computed: {},\n  methods: {\n    fitnessComment(report) {\n      //get the fitness & conditioning comment only\n      if (report.subject == \"Fitness & Conditioning\") {\n        return report\n      }\n    },\n    getFitnessData(activity) {\n      //get fitness data\n      let fitnessStuff = this.fitnessData.filter(\n        fit => fit.nsn == this.student.id\n      );\n\n      if (!fitnessStuff) {\n        fitnessStuff = \"No fitness data\";\n      }\n      switch (activity) {\n        case \"run4k\":{\n          const run4kTimes = fitnessStuff[0].run4k;\n          //get index of training absenses\n          const run4kempties = run4kTimes.flatMap((runs, i) => runs === '' ? i : []);\n          //remove times and dates student wasnt there.\n          const filteredrun4k = run4kTimes.filter((d, i) => run4kempties.indexOf(i) == -1)\n          return filteredrun4k;\n        }\n        case \"yoyo\":{\n          const yoyoTimes = fitnessStuff[0].yoyo;\n          const yoyoempties = yoyoTimes.flatMap((yoyo, i) => yoyo === '' ? i : []);\n          const filteredyoyo = yoyoTimes.filter((d, i) => yoyoempties.indexOf(i) == -1)\n          return filteredyoyo;\n        }\n        case \"pressups\":{\n          const pressupsTimes = fitnessStuff[0].pressups\n          const pressupsempties = pressupsTimes.flatMap((pressup, i) => pressup === '' ? i : []);\n          const filteredpressups = pressupsTimes.filter((d, i) => pressupsempties.indexOf(i) == -1)\n          return filteredpressups;\n        }\n        case \"situps\":{\n          const situpsTimes = fitnessStuff[0].situps\n          const situpsempties = situpsTimes.flatMap((situp, i) => situp === '' ? i : []);\n          const filteredsitups = situpsTimes.filter((d, i) => situpsempties.indexOf(i) == -1)\n          return filteredsitups;\n        }\n        case \"burpees\":{\n          const burpeesTimes = fitnessStuff[0].burpees\n          const burpeesempties = burpeesTimes.flatMap((burpee, i) => burpee === '' ? i : []);\n          const filteredburpees = burpeesTimes.filter((d, i) => burpeesempties.indexOf(i) == -1)\n          return filteredburpees;\n        }\n      case \"airsquats\":{\n        const airsquatsTimes = fitnessStuff[0].airsquats\n        const airsquatsempties = airsquatsTimes.flatMap((airsquat, i) => airsquat === '' ? i : []);\n        const filteredairsquats = airsquatsTimes.filter((d, i) => airsquatsempties.indexOf(i) == -1)\n        return filteredairsquats;\n      }\n        default:\n      }\n    },\n    getLengthArray(activity) {\n      //get fitness data\n      let fitnessStuff = this.fitnessData.filter(\n        fit => fit.nsn == this.student.id\n      );\n      if (!fitnessStuff) {\n        fitnessStuff = \"No fitness data\";\n      }\n      switch (activity) {\n        case \"run4k\":{\n          const run4kTimes = fitnessStuff[0].run4k;\n          const run4kDates = fitnessStuff[0].run4kDates;\n          //get index of training absenses\n          const run4kempties = run4kTimes.flatMap((runs, i) => runs === '' ? i : []);\n          //remove dates student wasnt there.\n          const filteredrun4kDates = run4kDates.filter((d, i) => run4kempties.indexOf(i) == -1)\n          return filteredrun4kDates;\n        }\n        case \"yoyo\":{\n          const yoyoTimes = fitnessStuff[0].yoyo;\n          const yoyoDates = fitnessStuff[0].yoyoDates;\n          const yoyoempties = yoyoTimes.flatMap((yoyo, i) => yoyo === '' ? i : []);\n          const filteredyoyoDates = yoyoDates.filter((d, i) => yoyoempties.indexOf(i) == -1)\n          return filteredyoyoDates;\n        }\n        case \"pressups\":{\n          const pressupsTimes = fitnessStuff[0].pressups;\n          const pressupsDates = fitnessStuff[0].strengthDates;\n          const pressupsempties = pressupsTimes.flatMap((preesup, i) => preesup === '' ? i : []);\n          const filteredpressupsDates = pressupsDates.filter((d, i) => pressupsempties.indexOf(i) == -1)\n          return filteredpressupsDates;\n        }\n        case \"situps\": {\n          const situpsTimes = fitnessStuff[0].situps;\n          const situpsDates = fitnessStuff[0].strengthDates;\n          const situpsempties = situpsTimes.flatMap((situp, i) => situp === '' ? i : []);\n          const filteredsitupsDates = situpsDates.filter((d, i) => situpsempties.indexOf(i) == -1)\n          return filteredsitupsDates;\n        }\n        case \"airsquats\": {\n          const airsquatsTimes = fitnessStuff[0].airsquats;\n          const airsquatsDates = fitnessStuff[0].strengthDates;\n          const airsquatsempties = airsquatsTimes.flatMap((airsquat, i) => airsquat === '' ? i : []);\n          const filteredairsquatsDates = airsquatsDates.filter((d, i) => airsquatsempties.indexOf(i) == -1)\n          return filteredairsquatsDates;\n        }\n        case \"burpees\": {\n          const burpeesTimes = fitnessStuff[0].burpees;\n          const burpeesDates = fitnessStuff[0].strengthDates;\n          const burpeesempties = burpeesTimes.flatMap((burpee, i) => burpee === '' ? i : []);\n          const filteredburpeesDates = burpeesDates.filter((d, i) =>  burpeesempties.indexOf(i) == -1)\n          return filteredburpeesDates;\n        }\n        default:\n      }\n    },\n    loadChart() {\n\n      var run = document.getElementById(this.studentName + \"RunChart\");\n      var yoyo = document.getElementById(this.studentName + \"YoyoChart\");\n      var situps = document.getElementById(this.studentName + \"SitupsChart\");\n      var burpees = document.getElementById(this.studentName + \"BurpeesChart\");\n      var airsquats = document.getElementById(this.studentName + \"AirsquatsChart\");\n      var pressups = document.getElementById(this.studentName + \"PressupsChart\");\n\n      //=========== 4KM RUN CHART ===========\n      this.runChart = new Chart(run, {\n        type: \"line\",\n        data: {\n          datasets: [\n            {\n              data: this.getFitnessData(\"run4k\"),\n              label: \"4km Time\",\n              backgroundColor: \"#209cee\",\n              borderColor: \"#209cee\",\n              fill: false,\n              //datalabels: ,\n            },\n          ],\n          labels: this.getLengthArray(\"run4k\")\n        },\n        options: {\n          responsive: true,\n          title: {\n            display: true,\n            text: \"4K Run\"\n          },\n          tooltips: {\n            mode: \"index\",\n            intersect: false\n          },\n          hover: {\n            mode: \"nearest\",\n            intersect: true\n          },\n          scales: {\n            xAxes: [\n              {\n                // type: 'time',\n                // time: {\n                //     unit: 'month'\n                // },\n                display: true,\n                scaleLabel: {\n                  display: false,\n                  labelString: \"Month\"\n                },\n              }\n            ],\n            yAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Minutes\"\n                },\n                ticks: {\n                  reverse: true\n                }\n              }\n            ]\n          },\n          legend: {\n            display: true,\n            position: \"bottom\",\n            labels: {\n              boxWidth: 10,\n              fontSize: 10\n            }\n          }\n        },\n        plugins: {\n          labels: {\n            render: \"value\",\n            fontColor: \"#000\",\n            position: \"border\"\n            // outsidePadding: 4\n          }\n        }\n      });\n\n      //=========== YOYO CHART ===========\n      this.runChart = new Chart(yoyo, {\n        type: \"line\",\n        data: {\n          datasets: [\n            {\n              data: this.getFitnessData(\"yoyo\"),\n              label: \"Yoyo level\",\n              backgroundColor: \"#23d160\",\n              borderColor: \"#23d160\",\n              fill: false,\n              spanGaps: false\n            }\n          ],\n          labels: this.getLengthArray(\"yoyo\")\n        },\n        options: {\n          responsive: true,\n          title: {\n            display: true,\n            text: \"Yoyo\"\n          },\n          tooltips: {\n            mode: \"index\",\n            intersect: false\n          },\n          hover: {\n            mode: \"nearest\",\n            intersect: true\n          },\n          scales: {\n            xAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: false,\n                  labelString: \"Yoyo Level\"\n                }\n              }\n            ],\n            yAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Level\"\n                },\n                ticks: {\n                  // beginAtZero: true\n                }\n              }\n            ]\n          },\n          legend: {\n            display: true,\n            position: \"bottom\",\n            labels: {\n              boxWidth: 10,\n              fontSize: 9\n            }\n          }\n        }\n      });\n\n      //=========== SITUPS STRENGTH CHART ===========\n      this.strengthChart = new Chart(situps, {\n        type: \"line\",\n        data: {\n          datasets: [\n            {\n              data: this.getFitnessData(\"situps\"),\n              label: \"Sit ups\",\n              backgroundColor: \"#6457A6\",\n              borderColor: \"#6457A6\",\n              fill: false,\n              spanGaps: false\n            }\n          ],\n          labels: this.getLengthArray(\"situps\")\n        },\n        options: {\n          responsive: true,\n          title: {\n            display: true,\n            text: \"Situps\"\n          },\n          tooltips: {\n            mode: \"index\",\n            intersect: false\n          },\n          hover: {\n            mode: \"nearest\",\n            intersect: true\n          },\n          scales: {\n            xAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Term\"\n                }\n              }\n            ],\n            yAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Reps\"\n                }\n              }\n            ]\n          },\n          legend: {\n            display: true,\n            position: \"bottom\",\n            labels: {\n              boxWidth: 10,\n              fontSize: 9,\n              textAlign: \"center\"\n            }\n          }\n        }\n      });\n\n      //=========== PRESSUPS STRENGTH CHART ===========\n      this.strengthChart = new Chart(pressups, {\n        type: \"line\",\n        data: {\n          datasets: [\n            {\n              data: this.getFitnessData(\"pressups\"),\n              label: \"Press ups\",\n              backgroundColor: \"#ff8246\",\n              borderColor: \"#ff8246\",\n              fill: false,\n              spanGaps: false\n            }\n          ],\n          labels: this.getLengthArray(\"pressups\")\n        },\n        options: {\n          responsive: true,\n          title: {\n            display: true,\n            text: \"Pressups\"\n          },\n          tooltips: {\n            mode: \"index\",\n            intersect: false\n          },\n          hover: {\n            mode: \"nearest\",\n            intersect: true\n          },\n          scales: {\n            xAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Term\"\n                }\n              }\n            ],\n            yAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: false,\n                  labelString: \"Reps\"\n                }\n              }\n            ]\n          },\n          legend: {\n            display: true,\n            position: \"bottom\",\n            labels: {\n              boxWidth: 10,\n              fontSize: 9,\n              textAlign: \"center\"\n            }\n          }\n        }\n      });\n\n      //=========== BURPEES STRENGTH CHART ===========\n      this.strengthChart = new Chart(burpees, {\n        type: \"line\",\n        data: {\n          datasets: [\n            {\n              data: this.getFitnessData(\"burpees\"),\n              label: \"Burpees\",\n              backgroundColor: \"#628395\",\n              borderColor: \"#628395\",\n              fill: false,\n              spanGaps: false\n            }\n          ],\n          labels: this.getLengthArray(\"burpees\")\n        },\n        options: {\n          responsive: true,\n          title: {\n            display: true,\n            text: \"Burpees\"\n          },\n          tooltips: {\n            mode: \"index\",\n            intersect: false\n          },\n          hover: {\n            mode: \"nearest\",\n            intersect: true\n          },\n          scales: {\n            xAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Term\"\n                }\n              }\n            ],\n            yAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: false,\n                  labelString: \"Reps\"\n                }\n              }\n            ]\n          },\n          legend: {\n            display: true,\n            position: \"bottom\",\n            labels: {\n              boxWidth: 10,\n              fontSize: 9,\n              textAlign: \"center\"\n            }\n          }\n        }\n      });\n\n      //=========== AIRSQUATS STRENGTH CHART ===========\n      this.strengthChart = new Chart(airsquats, {\n        type: \"line\",\n        data: {\n          datasets: [\n            {\n              data: this.getFitnessData(\"airsquats\"),\n              label: \"Air Squats\",\n              backgroundColor: \"#EF306D\",\n              borderColor: \"#EF306D\",\n              fill: false,\n              spanGaps: false\n            }\n          ],\n          labels: this.getLengthArray(\"airsquats\")\n        },\n        options: {\n          responsive: true,\n          title: {\n            display: true,\n            text: \"Airsquats\"\n          },\n          tooltips: {\n            mode: \"index\",\n            intersect: false\n          },\n          hover: {\n            mode: \"nearest\",\n            intersect: true\n          },\n          scales: {\n            xAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Term\"\n                }\n              }\n            ],\n            yAxes: [\n              {\n                display: true,\n                scaleLabel: {\n                  display: false,\n                  labelString: \"Reps\"\n                }\n              }\n            ]\n          },\n          legend: {\n            display: true,\n            position: \"bottom\",\n            labels: {\n              boxWidth: 10,\n              fontSize: 9,\n              textAlign: \"center\"\n            }\n          }\n        }\n      });\n\n\n    }\n  }\n};\n</script>\n\n<style scoped>\n.container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.chartsContainerRow {\n  width: 100%;\n  display: flex;\n  /* flex-direction: column; */\n  /* justify-content: space-between; */\n  /* border: 1px solid red; */\n}\n\n.chartsContainerColumn {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  /* justify-content: space-between; */\n  /* border: 1px solid red; */\n}\n\n/* .chartLeft,\n.chartCenter,\n.chartRight {\n  width: 50%;\n} */\n\n.chartFull {\n  width: 100%;\n}\n\n.chartQuarter {\n  width: 25%;\n}\n\n.chartLeftFlex,\n.chartCenterFlex,\n.chartRightFlex {\n  margin-bottom: 50px;\n}\n\n.fitnessIcon {\n  width: 25px;\n  height: 25px;\n}\n\n@media (min-width: 1200px) {\n  .chartsContainerFlex {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n    /* border: 1px solid red; */\n  }\n  .chartLeftFlex,\n  .chartCenterFlex,\n  .chartRightFlex {\n    width: 50%;\n    margin: auto;\n    margin-bottom: 50px;\n  }\n}\n</style>\n"]}]}