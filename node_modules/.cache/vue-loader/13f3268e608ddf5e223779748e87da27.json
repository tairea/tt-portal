{"remainingRequest":"/Users/iantairea/Desktop/Projects/tt-mobile/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/iantairea/Desktop/Projects/tt-mobile/src/components/DashboardOverview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/iantairea/Desktop/Projects/tt-mobile/src/components/DashboardOverview.vue","mtime":1586934296723},{"path":"/Users/iantairea/Desktop/Projects/tt-mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iantairea/Desktop/Projects/tt-mobile/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iantairea/Desktop/Projects/tt-mobile/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/iantairea/Desktop/Projects/tt-mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iantairea/Desktop/Projects/tt-mobile/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from \"vue\";\nimport Buefy from \"buefy\";\nimport \"buefy/dist/buefy.css\";\nimport firebase from \"firebase\";\n\nVue.use(Buefy);\n\nimport { studentsDb } from \"./firebaseInit\";\nimport Navbar from \"./Navbar.vue\";\nimport ProfileDetails from \"./ProfileDetails.vue\";\nimport ProfileCurrentWork from \"./ProfileCurrentWork.vue\";\nimport ProfileCompletedWork from \"./ProfileCompletedWork.vue\";\nimport ProfileOverviewWork from \"./ProfileOverviewWork.vue\";\n\nexport default {\n  name: \"Dashboard\",\n  components: {\n    Navbar,\n    ProfileDetails,\n    ProfileCurrentWork,\n    ProfileCompletedWork,\n    ProfileOverviewWork\n  },\n  data() {\n    return {\n      currentUser: null,\n      students: [],\n      ticked: [],\n      studentsTicked: [],\n      // student: null,\n      loadedStudents: false\n    };\n  },\n  methods: {\n    logout: function() {\n      firebase\n        .auth()\n        .signOut()\n        .then(() => {\n          alert(\"signed out\");\n          this.$router.go({ path: this.$router.path });\n        });\n    },\n    checkYear(year) {\n      var yearBox = document.getElementById(year + \"Checkbox\");\n      var yearCheckboxes = document.getElementsByName(year);\n      if (yearBox.checked == true) {\n        for (var i = 0, n = yearCheckboxes.length; i < n; i++) {\n          yearCheckboxes[i].checked = true;\n        }\n      } else if (yearBox.checked == false) {\n        for (var i = 0, n = yearCheckboxes.length; i < n; i++) {\n          yearCheckboxes[i].checked = false;\n        }\n      }\n      this.tickedStudents();\n    },\n    checkAll() {\n      var allCheckbox = document.getElementById(\"allCheckbox\");\n      var allCheckboxes = document.getElementsByTagName(\"input\");\n      if (allCheckbox.checked == true) {\n        for (var i = 0, n = allCheckboxes.length; i < n; i++) {\n          allCheckboxes[i].checked = true;\n        }\n      } else if (allCheckbox.checked == false) {\n        for (var i = 0, n = allCheckboxes.length; i < n; i++) {\n          allCheckboxes[i].checked = false;\n        }\n      }\n      this.tickedStudents();\n    },\n    getYearGroup(yearlevel) {\n      const yearGroup = this.students.filter(\n        student => student.school_year == yearlevel\n      );\n      return yearGroup;\n    },\n    tickedStudents() {\n      //uncheck 'all'\n      // document.getElementById(\"all\").checked = false;\n\n      var checkedStudents = [];\n      var checkedElements = document.querySelectorAll(\"input:checked\");\n      var uncheckedElements = document.querySelectorAll(\"input:not(:checked)\");\n\n      //push nsn of students that are ticked\n      checkedElements.forEach(el => {\n        checkedStudents.push(Number(el.value));\n      });\n\n      //remove students that are un-ticked\n      uncheckedElements.forEach(uncheckedEl => {\n        if (checkedStudents.indexOf(uncheckedEl.value) !== -1) {\n          checkedStudents.splice(checkedStudents.indexOf(uncheckedEl.value), 1);\n        }\n      });\n\n      this.ticked = checkedStudents;\n      //filter only the ticked students\n      this.studentsTicked = this.students.filter(student => {\n        return this.ticked.includes(student.nsn);\n      });\n    }\n  },\n  watch: {\n    currentUser(user) {\n      this.$bind(\n        \"students\",\n        // studentsDb.where(\"email\", \"array-contains\", user.email)\n        studentsDb.orderBy(\"school_year\") //LOADS ALL STUDENTS\n      );\n    },\n    students(students) {\n      this.$set(this, \"loadedStudents\", true);\n    }\n  },\n  mounted() {\n    this.$set(this, \"currentUser\", firebase.auth().currentUser);\n    // eslint-disable-next-line\n    console.log(\"user is:\", firebase.auth().currentUser.displayName);\n  }\n};\n",{"version":3,"sources":["DashboardOverview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"DashboardOverview.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"dashboard\">\n    <div v-if=\"students.length > 0\">\n      <!-- navbar -->\n      <!-- <Navbar :student=\"students[0]\"/> -->\n\n      <!-- filter checkboxes -->\n      <div class=\"filterBoxes\">\n        <div class=\"filerCategories\">\n          <label class=\"checkbox\">\n            <input type=\"checkbox\" id=\"allCheckbox\" v-on:click=\"checkAll()\">\n            All\n          </label>\n        </div>\n        <div class=\"filerCategories\">\n          <label class=\"checkbox\">\n            <input type=\"checkbox\" v-on:click=\"checkYear('year9')\" id=\"year9Checkbox\">\n            Year 9\n          </label>\n          <br>\n          <label v-for=\"student in getYearGroup(9)\" :key=\"student.nsn\" class=\"checkbox\">\n            <input type=\"checkbox\" name=\"year9\" :value=\"student.nsn\" v-on:click=\"tickedStudents()\">\n            {{student.given_name}}\n          </label>\n        </div>\n        <div class=\"filerCategories\">\n          <label class=\"checkbox\">\n            <input type=\"checkbox\" v-on:click=\"checkYear('year10')\" id=\"year10Checkbox\">\n            Year 10\n          </label>\n          <br>\n          <label v-for=\"student in getYearGroup(10)\" :key=\"student.nsn\" class=\"checkbox\">\n            <input type=\"checkbox\" name=\"year10\" :value=\"student.nsn\" v-on:click=\"tickedStudents()\">\n            {{student.given_name}}\n          </label>\n        </div>\n        <div class=\"filerCategories\">\n          <label class=\"checkbox\">\n            <input type=\"checkbox\" v-on:click=\"checkYear('year11')\" id=\"year11Checkbox\">\n            Year 11\n          </label>\n          <br>\n          <label v-for=\"student in getYearGroup(11)\" :key=\"student.nsn\" class=\"checkbox\">\n            <input type=\"checkbox\" name=\"year11\" :value=\"student.nsn\" v-on:click=\"tickedStudents()\">\n            {{student.given_name}}\n          </label>\n        </div>\n        <div class=\"filerCategories\">\n          <label class=\"checkbox\">\n            <input type=\"checkbox\" v-on:click=\"checkYear('year12')\" id=\"year12Checkbox\">\n            Year 12\n          </label>\n          <br>\n          <label v-for=\"student in getYearGroup(12)\" :key=\"student.nsn\" class=\"checkbox\">\n            <input type=\"checkbox\" name=\"year12\" :value=\"student.nsn\" v-on:click=\"tickedStudents()\">\n            {{student.given_name}}\n          </label>\n        </div>\n        <div class=\"filerCategories\">\n          <label class=\"checkbox\">\n            <input type=\"checkbox\" v-on:click=\"checkYear('year13')\" id=\"year13Checkbox\">\n            Year 13\n          </label>\n          <br>\n          <label v-for=\"student in getYearGroup(13)\" :key=\"student.nsn\" class=\"checkbox\">\n            <input type=\"checkbox\" name=\"year13\" :value=\"student.nsn\" v-on:click=\"tickedStudents()\">\n            {{student.given_name}}\n          </label>\n        </div>\n      </div>\n\n      <!-- show students -->\n      <div class=\"flexbox\">\n        <div v-for=\"student in studentsTicked\" :key=\"student.nsn\" class=\"flexitem\">\n          <ProfileDetails :student=\"student\" :overview=\"true\" class=\"margin-5\"/>\n          <ProfileCurrentWork :student=\"student\" :overview=\"true\"/>\n          <ProfileCompletedWork :student=\"student\" :overview=\"true\"/>\n          <ProfileOverviewWork :student=\"student\" :overview=\"true\" class=\"margin-20\"/>\n          <hr>\n        </div>\n      </div>\n    </div>\n\n    <!-- if no student loads -->\n    <div v-if=\"students.length == 0\" class=\"flexCenter\">\n      <p>Loading...</p>\n      <br>\n      <p>\n        If page doesn't load,\n        <br>please\n        <a href=\"mailto:i.tairea@taiwananga.co.nz\">email Pa Ian</a>\n        <br>to be entered into the system.\n      </p>\n      <br>\n      <div class=\"button is-light\" id=\"signoutButton\" @click=\"logout\">Sign Out</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from \"vue\";\nimport Buefy from \"buefy\";\nimport \"buefy/dist/buefy.css\";\nimport firebase from \"firebase\";\n\nVue.use(Buefy);\n\nimport { studentsDb } from \"./firebaseInit\";\nimport Navbar from \"./Navbar.vue\";\nimport ProfileDetails from \"./ProfileDetails.vue\";\nimport ProfileCurrentWork from \"./ProfileCurrentWork.vue\";\nimport ProfileCompletedWork from \"./ProfileCompletedWork.vue\";\nimport ProfileOverviewWork from \"./ProfileOverviewWork.vue\";\n\nexport default {\n  name: \"Dashboard\",\n  components: {\n    Navbar,\n    ProfileDetails,\n    ProfileCurrentWork,\n    ProfileCompletedWork,\n    ProfileOverviewWork\n  },\n  data() {\n    return {\n      currentUser: null,\n      students: [],\n      ticked: [],\n      studentsTicked: [],\n      // student: null,\n      loadedStudents: false\n    };\n  },\n  methods: {\n    logout: function() {\n      firebase\n        .auth()\n        .signOut()\n        .then(() => {\n          alert(\"signed out\");\n          this.$router.go({ path: this.$router.path });\n        });\n    },\n    checkYear(year) {\n      var yearBox = document.getElementById(year + \"Checkbox\");\n      var yearCheckboxes = document.getElementsByName(year);\n      if (yearBox.checked == true) {\n        for (var i = 0, n = yearCheckboxes.length; i < n; i++) {\n          yearCheckboxes[i].checked = true;\n        }\n      } else if (yearBox.checked == false) {\n        for (var i = 0, n = yearCheckboxes.length; i < n; i++) {\n          yearCheckboxes[i].checked = false;\n        }\n      }\n      this.tickedStudents();\n    },\n    checkAll() {\n      var allCheckbox = document.getElementById(\"allCheckbox\");\n      var allCheckboxes = document.getElementsByTagName(\"input\");\n      if (allCheckbox.checked == true) {\n        for (var i = 0, n = allCheckboxes.length; i < n; i++) {\n          allCheckboxes[i].checked = true;\n        }\n      } else if (allCheckbox.checked == false) {\n        for (var i = 0, n = allCheckboxes.length; i < n; i++) {\n          allCheckboxes[i].checked = false;\n        }\n      }\n      this.tickedStudents();\n    },\n    getYearGroup(yearlevel) {\n      const yearGroup = this.students.filter(\n        student => student.school_year == yearlevel\n      );\n      return yearGroup;\n    },\n    tickedStudents() {\n      //uncheck 'all'\n      // document.getElementById(\"all\").checked = false;\n\n      var checkedStudents = [];\n      var checkedElements = document.querySelectorAll(\"input:checked\");\n      var uncheckedElements = document.querySelectorAll(\"input:not(:checked)\");\n\n      //push nsn of students that are ticked\n      checkedElements.forEach(el => {\n        checkedStudents.push(Number(el.value));\n      });\n\n      //remove students that are un-ticked\n      uncheckedElements.forEach(uncheckedEl => {\n        if (checkedStudents.indexOf(uncheckedEl.value) !== -1) {\n          checkedStudents.splice(checkedStudents.indexOf(uncheckedEl.value), 1);\n        }\n      });\n\n      this.ticked = checkedStudents;\n      //filter only the ticked students\n      this.studentsTicked = this.students.filter(student => {\n        return this.ticked.includes(student.nsn);\n      });\n    }\n  },\n  watch: {\n    currentUser(user) {\n      this.$bind(\n        \"students\",\n        // studentsDb.where(\"email\", \"array-contains\", user.email)\n        studentsDb.orderBy(\"school_year\") //LOADS ALL STUDENTS\n      );\n    },\n    students(students) {\n      this.$set(this, \"loadedStudents\", true);\n    }\n  },\n  mounted() {\n    this.$set(this, \"currentUser\", firebase.auth().currentUser);\n    // eslint-disable-next-line\n    console.log(\"user is:\", firebase.auth().currentUser.displayName);\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  /* margin-top: 60px; */\n}\n\n.margin-5 {\n  margin: 5px 0px;\n}\n.margin-20 {\n  margin: 20px 0px;\n}\n\n.flexCenter {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  height: 100vh;\n}\n\nhr {\n  margin: 50px 0px;\n}\n\n.filterBoxes {\n  margin: 25px;\n  display: flex;\n}\n\n.filerCategories {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 2em;\n}\n\n.flexbox {\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.flexitem {\n  /* width: 25%; */\n  min-width: 320px;\n}\n\n@media (max-width: 599px) {\n  .flexitem {\n    width: 100%;\n  }\n}\n</style>\n"]}]}